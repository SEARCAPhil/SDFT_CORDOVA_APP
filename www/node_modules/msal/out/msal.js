!function(t){var r={};function o(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=t,o.c=r,o.d=function(e,n,t){o.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)o.d(t,r,function(e){return n[e]}.bind(null,r));return t},o.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(n,"a",n),n},o.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},o.p="",o(o.s="./src/node_modules/msal/out/msal.js")}({"./src/node_modules/msal/out/msal.js":
/*!*******************************************!*\
  !*** ./src/node_modules/msal/out/msal.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('/*! msal v0.1.1 2017-05-09 */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar Msal;\n(function (Msal) {\n    var AuthorityType;\n    (function (AuthorityType) {\n        AuthorityType[AuthorityType["Aad"] = 0] = "Aad";\n        AuthorityType[AuthorityType["Adfs"] = 1] = "Adfs";\n        AuthorityType[AuthorityType["B2C"] = 2] = "B2C";\n    })(AuthorityType = Msal.AuthorityType || (Msal.AuthorityType = {}));\n    var Authority = (function () {\n        function Authority(authority, validateAuthority) {\n            this.IsValidationEnabled = validateAuthority;\n            this.CanonicalAuthority = authority;\n            this.validateAsUri();\n        }\n        Object.defineProperty(Authority.prototype, "Tenant", {\n            get: function () {\n                return this.CanonicalAuthorityUrlComponents.PathSegments[0];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Authority.prototype, "AuthorizationEndpoint", {\n            get: function () {\n                this.validateResolved();\n                return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace("{tenant}", this.Tenant);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Authority.prototype, "EndSessionEndpoint", {\n            get: function () {\n                this.validateResolved();\n                return this.tenantDiscoveryResponse.EndSessionEndpoint.replace("{tenant}", this.Tenant);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Authority.prototype, "SelfSignedJwtAudience", {\n            get: function () {\n                this.validateResolved();\n                return this.tenantDiscoveryResponse.Issuer.replace("{tenant}", this.Tenant);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Authority.prototype.validateResolved = function () {\n            if (!this.tenantDiscoveryResponse) {\n                throw "Please call ResolveEndpointsAsync first";\n            }\n        };\n        Object.defineProperty(Authority.prototype, "CanonicalAuthority", {\n            get: function () {\n                return this.canonicalAuthority;\n            },\n            set: function (url) {\n                this.canonicalAuthority = Msal.Utils.CanonicalizeUri(url);\n                this.canonicalAuthorityUrlComponents = null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Authority.prototype, "CanonicalAuthorityUrlComponents", {\n            get: function () {\n                if (!this.canonicalAuthorityUrlComponents) {\n                    this.canonicalAuthorityUrlComponents = Msal.Utils.GetUrlComponents(this.CanonicalAuthority);\n                }\n                return this.canonicalAuthorityUrlComponents;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Authority.prototype, "DefaultOpenIdConfigurationEndpoint", {\n            get: function () {\n                return this.CanonicalAuthority + "v2.0/.well-known/openid-configuration";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Authority.prototype.validateAsUri = function () {\n            var components;\n            try {\n                components = this.CanonicalAuthorityUrlComponents;\n            }\n            catch (e) {\n                throw Msal.ErrorMessage.invalidAuthorityType;\n            }\n            if (!components.Protocol || components.Protocol.toLowerCase() !== "https:") {\n                throw Msal.ErrorMessage.authorityUriInsecure;\n            }\n            ;\n            if (!components.PathSegments || components.PathSegments.length < 1) {\n                throw Msal.ErrorMessage.authorityUriInvalidPath;\n            }\n        };\n        Authority.DetectAuthorityFromUrl = function (authorityUrl) {\n            authorityUrl = Msal.Utils.CanonicalizeUri(authorityUrl);\n            var components = Msal.Utils.GetUrlComponents(authorityUrl);\n            var pathSegments = components.PathSegments;\n            switch (pathSegments[0]) {\n                case "tfp":\n                    return AuthorityType.B2C;\n                case "adfs":\n                    return AuthorityType.Adfs;\n                default:\n                    return AuthorityType.Aad;\n            }\n        };\n        Authority.CreateInstance = function (authorityUrl, validateAuthority) {\n            var type = Authority.DetectAuthorityFromUrl(authorityUrl);\n            switch (type) {\n                case AuthorityType.B2C:\n                    return new Msal.B2cAuthority(authorityUrl, validateAuthority);\n                case AuthorityType.Aad:\n                    return new Msal.AadAuthority(authorityUrl, validateAuthority);\n                default:\n                    throw Msal.ErrorMessage.invalidAuthorityType;\n            }\n        };\n        Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint) {\n            var client = new Msal.XhrClient();\n            return client.sendRequestAsync(openIdConfigurationEndpoint, "GET", true)\n                .then(function (response) {\n                return {\n                    AuthorizationEndpoint: response.authorization_endpoint,\n                    EndSessionEndpoint: response.end_session_endpoint,\n                    Issuer: response.issuer\n                };\n            });\n        };\n        Authority.prototype.ResolveEndpointsAsync = function () {\n            var _this = this;\n            var openIdConfigurationEndpoint = "";\n            return this.GetOpenIdConfigurationEndpointAsync().then(function (openIdConfigurationEndpointResponse) {\n                openIdConfigurationEndpoint = openIdConfigurationEndpointResponse;\n                return _this.DiscoverEndpoints(openIdConfigurationEndpoint);\n            }).then(function (tenantDiscoveryResponse) {\n                _this.tenantDiscoveryResponse = tenantDiscoveryResponse;\n                return _this;\n            });\n        };\n        return Authority;\n    }());\n    Msal.Authority = Authority;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var AadAuthority = (function (_super) {\n        __extends(AadAuthority, _super);\n        function AadAuthority(authority, validateAuthority) {\n            return _super.call(this, authority, validateAuthority) || this;\n        }\n        Object.defineProperty(AadAuthority.prototype, "AadInstanceDiscoveryEndpointUrl", {\n            get: function () {\n                return AadAuthority.AadInstanceDiscoveryEndpoint + "?api-version=1.0&authorization_endpoint=" + this.CanonicalAuthority + "oauth2/v2.0/authorize";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AadAuthority.prototype, "AuthorityType", {\n            get: function () {\n                return Msal.AuthorityType.Aad;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AadAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function () {\n            var _this = this;\n            var resultPromise = new Promise(function (resolve, reject) {\n                return resolve(_this.DefaultOpenIdConfigurationEndpoint);\n            });\n            if (!this.IsValidationEnabled) {\n                return resultPromise;\n            }\n            var host = this.CanonicalAuthorityUrlComponents.HostNameAndPort;\n            if (this.IsInTrustedHostList(host)) {\n                return resultPromise;\n            }\n            var client = new Msal.XhrClient();\n            return client.sendRequestAsync(this.AadInstanceDiscoveryEndpointUrl, "GET", true)\n                .then(function (response) {\n                return response.tenant_discovery_endpoint;\n            });\n        };\n        AadAuthority.prototype.IsInTrustedHostList = function (host) {\n            return AadAuthority.TrustedHostList[host.toLowerCase()];\n        };\n        return AadAuthority;\n    }(Msal.Authority));\n    AadAuthority.AadInstanceDiscoveryEndpoint = "https://login.microsoftonline.com/common/discovery/instance";\n    AadAuthority.TrustedHostList = {\n        "login.windows.net": "login.windows.net",\n        "login.chinacloudapi.cn": "login.chinacloudapi.cn",\n        "login.cloudgovapi.us": "login.cloudgovapi.us",\n        "login.microsoftonline.com": "login.microsoftonline.com",\n        "login.microsoftonline.de": "login.microsoftonline.de"\n    };\n    Msal.AadAuthority = AadAuthority;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var AccessTokenCacheItem = (function () {\n        function AccessTokenCacheItem(key, value) {\n            this.key = key;\n            this.value = value;\n        }\n        return AccessTokenCacheItem;\n    }());\n    Msal.AccessTokenCacheItem = AccessTokenCacheItem;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var AccessTokenKey = (function () {\n        function AccessTokenKey(authority, clientId, scopes, uid, utid) {\n            this.authority = authority;\n            this.clientId = clientId;\n            this.scopes = scopes;\n            this.userIdentifier = Msal.Utils.base64EncodeStringUrlSafe(uid) + "." + Msal.Utils.base64EncodeStringUrlSafe(utid);\n        }\n        return AccessTokenKey;\n    }());\n    Msal.AccessTokenKey = AccessTokenKey;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var AccessTokenValue = (function () {\n        function AccessTokenValue(accessToken, idToken, expiresIn, clientInfo) {\n            this.accessToken = accessToken;\n            this.idToken = idToken;\n            this.expiresIn = expiresIn;\n            this.clientInfo = clientInfo;\n        }\n        return AccessTokenValue;\n    }());\n    Msal.AccessTokenValue = AccessTokenValue;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var AuthenticationRequestParameters = (function () {\n        function AuthenticationRequestParameters(authority, clientId, scope, responseType, redirectUri) {\n            this.authorityInstance = authority;\n            this.clientId = clientId;\n            this.scopes = scope;\n            this.responseType = responseType;\n            this.redirectUri = redirectUri;\n            this.correlationId = Msal.Utils.createNewGuid();\n            this.state = Msal.Utils.createNewGuid();\n            this.nonce = Msal.Utils.createNewGuid();\n            this.xClientSku = "MSAL.JS";\n            this.xClientVer = Msal.Utils.getLibraryVersion();\n        }\n        Object.defineProperty(AuthenticationRequestParameters.prototype, "authority", {\n            get: function () {\n                return this.authorityInstance.CanonicalAuthority;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        AuthenticationRequestParameters.prototype.createNavigateUrl = function (scopes) {\n            if (!scopes) {\n                scopes = [this.clientId];\n            }\n            if (scopes.indexOf(this.clientId) === -1) {\n                scopes.push(this.clientId);\n            }\n            var str = [];\n            str.push("response_type=" + this.responseType);\n            this.translateclientIdUsedInScope(scopes);\n            str.push("scope=" + encodeURIComponent(this.parseScope(scopes)));\n            str.push("client_id=" + encodeURIComponent(this.clientId));\n            str.push("redirect_uri=" + encodeURIComponent(this.redirectUri));\n            str.push("state=" + encodeURIComponent(this.state));\n            str.push("nonce=" + encodeURIComponent(this.nonce));\n            str.push("client_info=1");\n            str.push("x-client-SKU=" + this.xClientSku);\n            str.push("x-client-Ver=" + this.xClientVer);\n            if (this.extraQueryParameters) {\n                str.push(this.extraQueryParameters);\n            }\n            str.push("client-request-id=" + encodeURIComponent(this.correlationId));\n            var authEndpoint = this.authorityInstance.AuthorizationEndpoint;\n            if (authEndpoint.indexOf("?") < 0) {\n                authEndpoint += \'?\';\n            }\n            else {\n                authEndpoint += \'&\';\n            }\n            var requestUrl = "" + authEndpoint + str.join("&");\n            return requestUrl;\n        };\n        AuthenticationRequestParameters.prototype.translateclientIdUsedInScope = function (scopes) {\n            var clientIdIndex = scopes.indexOf(this.clientId);\n            if (clientIdIndex >= 0) {\n                scopes.splice(clientIdIndex, 1);\n                if (scopes.indexOf("openid") === -1) {\n                    scopes.push("openid");\n                }\n                if (scopes.indexOf("profile") === -1) {\n                    scopes.push("profile");\n                }\n            }\n        };\n        AuthenticationRequestParameters.prototype.parseScope = function (scopes) {\n            var scopeList = "";\n            if (scopes) {\n                for (var i = 0; i < scopes.length; ++i) {\n                    scopeList += (i !== scopes.length - 1) ? scopes[i] + " " : scopes[i];\n                }\n            }\n            return scopeList;\n        };\n        return AuthenticationRequestParameters;\n    }());\n    Msal.AuthenticationRequestParameters = AuthenticationRequestParameters;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var B2cAuthority = (function (_super) {\n        __extends(B2cAuthority, _super);\n        function B2cAuthority(authority, validateAuthority) {\n            var _this = _super.call(this, authority, validateAuthority) || this;\n            var urlComponents = Msal.Utils.GetUrlComponents(authority);\n            var pathSegments = urlComponents.PathSegments;\n            if (pathSegments.length < 3) {\n                throw Msal.ErrorMessage.b2cAuthorityUriInvalidPath;\n            }\n            _this.CanonicalAuthority = "https://" + urlComponents.HostNameAndPort + "/" + pathSegments[0] + "/" + pathSegments[1] + "/" + pathSegments[2] + "/";\n            return _this;\n        }\n        Object.defineProperty(B2cAuthority.prototype, "AuthorityType", {\n            get: function () {\n                return Msal.AuthorityType.B2C;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        B2cAuthority.prototype.GetOpenIdConfigurationEndpointAsync = function () {\n            var _this = this;\n            var resultPromise = new Promise(function (resolve, reject) {\n                return resolve(_this.DefaultOpenIdConfigurationEndpoint);\n            });\n            if (!this.IsValidationEnabled) {\n                return resultPromise;\n            }\n            if (this.IsInTrustedHostList(this.CanonicalAuthorityUrlComponents.HostNameAndPort)) {\n                return resultPromise;\n            }\n            return new Promise(function (resolve, reject) {\n                return reject(Msal.ErrorMessage.unsupportedAuthorityValidation);\n            });\n        };\n        return B2cAuthority;\n    }(Msal.AadAuthority));\n    Msal.B2cAuthority = B2cAuthority;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var ClientInfo = (function () {\n        function ClientInfo(rawClientInfo) {\n            if (!rawClientInfo || Msal.Utils.isEmpty(rawClientInfo)) {\n                this.uid = "";\n                this.utid = "";\n                return;\n            }\n            try {\n                var decodedClientInfo = Msal.Utils.base64DecodeStringUrlSafe(rawClientInfo);\n                var clientInfo = JSON.parse(decodedClientInfo);\n                if (clientInfo) {\n                    if (clientInfo.hasOwnProperty("uid")) {\n                        this.uid = clientInfo.uid;\n                    }\n                    if (clientInfo.hasOwnProperty("utid")) {\n                        this.utid = clientInfo.utid;\n                    }\n                }\n            }\n            catch (e) {\n                throw new Error(e);\n            }\n        }\n        Object.defineProperty(ClientInfo.prototype, "uid", {\n            get: function () {\n                return this._uid ? this._uid : "";\n            },\n            set: function (uid) {\n                this._uid = uid;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ClientInfo.prototype, "utid", {\n            get: function () {\n                return this._utid ? this._utid : "";\n            },\n            set: function (utid) {\n                this._utid = utid;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return ClientInfo;\n    }());\n    Msal.ClientInfo = ClientInfo;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var Constants = (function () {\n        function Constants() {\n        }\n        Object.defineProperty(Constants, "errorDescription", {\n            get: function () { return "error_description"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "error", {\n            get: function () { return "error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "scope", {\n            get: function () { return "scope"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "acquireTokenUser", {\n            get: function () { return "msal_acquireTokenUser"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "clientInfo", {\n            get: function () { return "client_info"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "clientId", {\n            get: function () { return "clientId"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "authority", {\n            get: function () { return "authority"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "idToken", {\n            get: function () { return "id_token"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "accessToken", {\n            get: function () { return "access_token"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "expiresIn", {\n            get: function () { return "expires_in"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "sessionState", {\n            get: function () { return "session_state"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "tokenKeys", {\n            get: function () { return "msal.token.keys"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "accessTokenKey", {\n            get: function () { return "msal.access.token.key"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "expirationKey", {\n            get: function () { return "msal.expiration.key"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "stateLogin", {\n            get: function () { return "msal.state.login"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "stateAcquireToken", {\n            get: function () { return "msal.state.acquireToken"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "stateRenew", {\n            get: function () { return "msal.state.renew"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "nonceIdToken", {\n            get: function () { return "msal.nonce.idtoken"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "userName", {\n            get: function () { return "msal.username"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "idTokenKey", {\n            get: function () { return "msal.idtoken"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "loginRequest", {\n            get: function () { return "msal.login.request"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "loginError", {\n            get: function () { return "msal.login.error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "renewStatus", {\n            get: function () { return "msal.token.renew.status"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "resourceDelimeter", {\n            get: function () { return "|"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "loadFrameTimeout", {\n            get: function () {\n                return this._loadFrameTimeout;\n            },\n            set: function (timeout) {\n                this._loadFrameTimeout = timeout;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        ;\n        Object.defineProperty(Constants, "tokenRenewStatusCancelled", {\n            get: function () { return "Canceled"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "tokenRenewStatusCompleted", {\n            get: function () { return "Completed"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "tokenRenewStatusInProgress", {\n            get: function () { return "In Progress"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "popUpWidth", {\n            get: function () { return this._popUpWidth; },\n            set: function (width) {\n                this._popUpWidth = width;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Constants, "popUpHeight", {\n            get: function () { return this._popUpHeight; },\n            set: function (height) {\n                this._popUpHeight = height;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Constants, "login", {\n            get: function () { return "LOGIN"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "renewToken", {\n            get: function () { return "renewToken"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Constants, "unknown", {\n            get: function () { return "UNKNOWN"; },\n            enumerable: true,\n            configurable: true\n        });\n        return Constants;\n    }());\n    Constants._loadFrameTimeout = 6000;\n    Constants._popUpWidth = 483;\n    Constants._popUpHeight = 600;\n    Msal.Constants = Constants;\n    var ErrorCodes = (function () {\n        function ErrorCodes() {\n        }\n        Object.defineProperty(ErrorCodes, "loginProgressError", {\n            get: function () { return "login_progress_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorCodes, "acquireTokenProgressError", {\n            get: function () { return "acquiretoken_progress_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorCodes, "inputScopesError", {\n            get: function () { return "input_scopes_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorCodes, "endpointResolutionError", {\n            get: function () { return "endpoints_resolution_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorCodes, "popUpWindowError", {\n            get: function () { return "popup_window_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorCodes, "userLoginError", {\n            get: function () { return "user_login_error"; },\n            enumerable: true,\n            configurable: true\n        });\n        return ErrorCodes;\n    }());\n    Msal.ErrorCodes = ErrorCodes;\n    var ErrorDescription = (function () {\n        function ErrorDescription() {\n        }\n        Object.defineProperty(ErrorDescription, "loginProgressError", {\n            get: function () { return "Login is in progress"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorDescription, "acquireTokenProgressError", {\n            get: function () { return "Acquire token is in progress"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorDescription, "inputScopesError", {\n            get: function () { return "Invalid value of input scopes provided"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorDescription, "endpointResolutionError", {\n            get: function () { return "Endpoints cannot be resolved"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorDescription, "popUpWindowError", {\n            get: function () { return "Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser."; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorDescription, "userLoginError", {\n            get: function () { return "User login is required"; },\n            enumerable: true,\n            configurable: true\n        });\n        return ErrorDescription;\n    }());\n    Msal.ErrorDescription = ErrorDescription;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var ErrorMessage = (function () {\n        function ErrorMessage() {\n        }\n        Object.defineProperty(ErrorMessage, "authorityUriInvalidPath", {\n            get: function () { return "AuthorityUriInvalidPath"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorMessage, "authorityUriInsecure", {\n            get: function () { return "AuthorityUriInsecure"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorMessage, "invalidAuthorityType", {\n            get: function () { return "InvalidAuthorityType"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorMessage, "unsupportedAuthorityValidation", {\n            get: function () { return "UnsupportedAuthorityValidation"; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ErrorMessage, "b2cAuthorityUriInvalidPath", {\n            get: function () { return "B2cAuthorityUriInvalidPath"; },\n            enumerable: true,\n            configurable: true\n        });\n        return ErrorMessage;\n    }());\n    Msal.ErrorMessage = ErrorMessage;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var IdToken = (function () {\n        function IdToken(rawIdToken) {\n            if (Msal.Utils.isEmpty(rawIdToken)) {\n                throw new Error("null or empty raw idtoken");\n            }\n            try {\n                this.rawIdToken = rawIdToken;\n                var decodedIdToken = Msal.Utils.extractIdToken(rawIdToken);\n                if (decodedIdToken) {\n                    if (decodedIdToken.hasOwnProperty("iss")) {\n                        this.issuer = decodedIdToken.iss;\n                    }\n                    if (decodedIdToken.hasOwnProperty("oid")) {\n                        this.objectId = decodedIdToken.oid;\n                    }\n                    if (decodedIdToken.hasOwnProperty("sub")) {\n                        this.subject = decodedIdToken.sub;\n                    }\n                    if (decodedIdToken.hasOwnProperty("tid")) {\n                        this.tenantId = decodedIdToken.tid;\n                    }\n                    if (decodedIdToken.hasOwnProperty("ver")) {\n                        this.version = decodedIdToken.ver;\n                    }\n                    if (decodedIdToken.hasOwnProperty("preferred_username")) {\n                        this.preferredName = decodedIdToken.preferred_username;\n                    }\n                    if (decodedIdToken.hasOwnProperty("name")) {\n                        this.name = decodedIdToken.name;\n                    }\n                    if (decodedIdToken.hasOwnProperty("nonce")) {\n                        this.nonce = decodedIdToken.nonce;\n                    }\n                    if (decodedIdToken.hasOwnProperty("exp")) {\n                        this.expiration = decodedIdToken.exp;\n                    }\n                }\n            }\n            catch (e) {\n                throw new Error("Failed to parse the returned id token");\n            }\n        }\n        return IdToken;\n    }());\n    Msal.IdToken = IdToken;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var LogLevel;\n    (function (LogLevel) {\n        LogLevel[LogLevel["Error"] = 0] = "Error";\n        LogLevel[LogLevel["Warning"] = 1] = "Warning";\n        LogLevel[LogLevel["Info"] = 2] = "Info";\n        LogLevel[LogLevel["Verbose"] = 3] = "Verbose";\n    })(LogLevel = Msal.LogLevel || (Msal.LogLevel = {}));\n    var Logger = (function () {\n        function Logger(correlationId) {\n            this._level = LogLevel.Info;\n            this._piiLoggingEnabled = false;\n            if (Logger._instance) {\n                return Logger._instance;\n            }\n            this._correlationId = correlationId;\n            Logger._instance = this;\n            return Logger._instance;\n        }\n        Object.defineProperty(Logger.prototype, "correlationId", {\n            get: function () { return this._correlationId; },\n            set: function (correlationId) {\n                this._correlationId = correlationId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Logger.prototype, "level", {\n            get: function () { return this._level; },\n            set: function (logLevel) {\n                if (LogLevel[logLevel]) {\n                    this._level = logLevel;\n                }\n                else\n                    throw new Error("Provide a valid value for level. Possibles range for logLevel is 0-3");\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Logger.prototype, "piiLoggingEnabled", {\n            get: function () { return this._piiLoggingEnabled; },\n            set: function (piiLoggingEnabled) {\n                this._piiLoggingEnabled = piiLoggingEnabled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(Logger.prototype, "localCallback", {\n            get: function () { return this._localCallback; },\n            set: function (localCallback) {\n                if (this.localCallback) {\n                    throw new Error("MSAL logging callback can only be set once per process and should never change once set.");\n                }\n                this._localCallback = localCallback;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Logger.prototype.logMessage = function (logMessage, logLevel, containsPii) {\n            if ((logLevel > this.level) || (!this.piiLoggingEnabled && containsPii)) {\n                return;\n            }\n            var timestamp = new Date().toUTCString();\n            var log;\n            if (!Msal.Utils.isEmpty(this.correlationId)) {\n                log = timestamp + ":" + this._correlationId + "-" + Msal.Utils.getLibraryVersion() + "-" + LogLevel[logLevel] + " " + logMessage;\n            }\n            else {\n                log = timestamp + ":" + Msal.Utils.getLibraryVersion() + "-" + LogLevel[logLevel] + " " + logMessage;\n            }\n            this.executeCallback(logLevel, log, containsPii);\n        };\n        Logger.prototype.executeCallback = function (level, message, containsPii) {\n            if (this.localCallback) {\n                this.localCallback(level, message, containsPii);\n            }\n        };\n        Logger.prototype.error = function (message) {\n            this.logMessage(message, LogLevel.Error, false);\n        };\n        Logger.prototype.errorPii = function (message) {\n            this.logMessage(message, LogLevel.Error, true);\n        };\n        Logger.prototype.warning = function (message) {\n            this.logMessage(message, LogLevel.Warning, false);\n        };\n        Logger.prototype.warningPii = function (message) {\n            this.logMessage(message, LogLevel.Warning, true);\n        };\n        Logger.prototype.info = function (message) {\n            this.logMessage(message, LogLevel.Info, false);\n        };\n        Logger.prototype.infoPii = function (message) {\n            this.logMessage(message, LogLevel.Info, true);\n        };\n        Logger.prototype.verbose = function (message) {\n            this.logMessage(message, LogLevel.Verbose, false);\n        };\n        Logger.prototype.verbosePii = function (message) {\n            this.logMessage(message, LogLevel.Verbose, true);\n        };\n        return Logger;\n    }());\n    Msal.Logger = Logger;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var RequestContext = (function () {\n        function RequestContext(correlationId) {\n            if (RequestContext._instance) {\n                return RequestContext._instance;\n            }\n            this._logger = new Msal.Logger(correlationId);\n            this._correlationId = this._logger.correlationId;\n            RequestContext._instance = this;\n        }\n        Object.defineProperty(RequestContext.prototype, "correlationId", {\n            get: function () { return this._correlationId; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RequestContext.prototype, "logger", {\n            get: function () { return this._logger; },\n            enumerable: true,\n            configurable: true\n        });\n        return RequestContext;\n    }());\n    Msal.RequestContext = RequestContext;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var TokenResponse = (function () {\n        function TokenResponse() {\n            this.valid = false;\n            this.parameters = {};\n            this.stateMatch = false;\n            this.stateResponse = "";\n            this.requestType = "unknown";\n        }\n        return TokenResponse;\n    }());\n    Msal.TokenResponse = TokenResponse;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var Storage = (function () {\n        function Storage(cacheLocation) {\n            if (Storage._instance) {\n                return Storage._instance;\n            }\n            this._cacheLocation = cacheLocation;\n            this._localStorageSupported = typeof window[this._cacheLocation] != "undefined" && window[this._cacheLocation] != null;\n            this._sessionStorageSupported = typeof window[cacheLocation] != "undefined" && window[cacheLocation] != null;\n            Storage._instance = this;\n            if (!this._localStorageSupported && !this._sessionStorageSupported) {\n                throw new Error("localStorage and sessionStorage not supported");\n            }\n            return Storage._instance;\n        }\n        Storage.prototype.setItem = function (key, value) {\n            if (window[this._cacheLocation]) {\n                window[this._cacheLocation].setItem(key, value);\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        Storage.prototype.getItem = function (key) {\n            if (window[this._cacheLocation]) {\n                return window[this._cacheLocation].getItem(key);\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        Storage.prototype.removeItem = function (key) {\n            if (window[this._cacheLocation]) {\n                return window[this._cacheLocation].removeItem(key);\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        Storage.prototype.clear = function () {\n            if (window[this._cacheLocation]) {\n                return window[this._cacheLocation].clear();\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        Storage.prototype.getAllAccessTokens = function (clientId, userIdentifier) {\n            var results = [];\n            var accessTokenCacheItem;\n            var storage = window[this._cacheLocation];\n            if (storage) {\n                var key = void 0;\n                for (key in storage) {\n                    if (storage.hasOwnProperty(key)) {\n                        if (key.match(clientId) && key.match(userIdentifier)) {\n                            var value = this.getItem(key);\n                            if (value) {\n                                accessTokenCacheItem = new Msal.AccessTokenCacheItem(JSON.parse(key), JSON.parse(value));\n                                results.push(accessTokenCacheItem);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n            return results;\n        };\n        Storage.prototype.removeAcquireTokenEntries = function (acquireTokenUser, acquireTokenStatus) {\n            var storage = window[this._cacheLocation];\n            if (storage) {\n                var key = void 0;\n                for (key in storage) {\n                    if (storage.hasOwnProperty(key)) {\n                        if ((key.indexOf(acquireTokenUser) > -1) || (key.indexOf(acquireTokenStatus) > -1)) {\n                            this.removeItem(key);\n                        }\n                    }\n                }\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        Storage.prototype.resetCacheItems = function () {\n            var storage = window[this._cacheLocation];\n            if (storage) {\n                var key = void 0;\n                for (key in storage) {\n                    if (storage.hasOwnProperty(key)) {\n                        storage[key] = "";\n                    }\n                }\n            }\n            else {\n                throw new Error("localStorage and sessionStorage are not supported");\n            }\n        };\n        return Storage;\n    }());\n    Msal.Storage = Storage;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var Telemetry = (function () {\n        function Telemetry() {\n        }\n        Telemetry.prototype.RegisterReceiver = function (receiverCallback) {\n            this.receiverCallback = receiverCallback;\n        };\n        Telemetry.GetInstance = function () {\n            return this.instance || (this.instance = new this());\n        };\n        return Telemetry;\n    }());\n    Msal.Telemetry = Telemetry;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var User = (function () {\n        function User(displayableId, name, identityProvider, userIdentifier) {\n            this.displayableId = displayableId;\n            this.name = name;\n            this.identityProvider = identityProvider;\n            this.userIdentifier = userIdentifier;\n        }\n        User.createUser = function (idToken, clientInfo, authority) {\n            var uid;\n            var utid;\n            if (!clientInfo) {\n                uid = "";\n                utid = "";\n            }\n            else {\n                uid = clientInfo.uid;\n                utid = clientInfo.utid;\n            }\n            var userIdentifier = Msal.Utils.base64EncodeStringUrlSafe(uid) + "." + Msal.Utils.base64EncodeStringUrlSafe(utid);\n            return new User(idToken.preferredName, idToken.name, idToken.issuer, userIdentifier);\n        };\n        return User;\n    }());\n    Msal.User = User;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var ResponseTypes = {\n        id_token: "id_token",\n        token: "token",\n        id_token_token: "id_token token"\n    };\n    var UserAgentApplication = (function () {\n        function UserAgentApplication(clientId, authority, tokenReceivedCallback, validateAuthority) {\n            this._cacheLocations = {\n                localStorage: "localStorage",\n                sessionStorage: "sessionStorage"\n            };\n            this._cacheLocation = "sessionStorage";\n            this._interactionModes = {\n                popUp: "popUp",\n                redirect: "redirect"\n            };\n            this._interactionMode = "redirect";\n            this._clockSkew = 300;\n            this._tokenReceivedCallback = null;\n            this.navigateToLoginRequestUrl = true;\n            this.clientId = clientId;\n            this.validateAuthority = validateAuthority === true;\n            this.authority = authority ? authority : "https://login.microsoftonline.com/common";\n            if (tokenReceivedCallback) {\n                this._tokenReceivedCallback = tokenReceivedCallback;\n            }\n            this.redirectUri = window.location.href.split("?")[0].split("#")[0];\n            this.postLogoutredirectUri = this.redirectUri;\n            this._loginInProgress = false;\n            this._acquireTokenInProgress = false;\n            this._renewStates = [];\n            this._activeRenewals = {};\n            this._cacheStorage = new Msal.Storage(this._cacheLocation);\n            this._requestContext = new Msal.RequestContext("");\n            window.msal = this;\n            window.callBackMappedToRenewStates = {};\n            window.callBacksMappedToRenewStates = {};\n            if (!window.opener) {\n                var isCallback = this.isCallback(window.location.hash);\n                if (isCallback)\n                    this.handleAuthenticationResponse(window.location.hash);\n            }\n        }\n        Object.defineProperty(UserAgentApplication.prototype, "cacheLocation", {\n            get: function () {\n                return this._cacheLocation;\n            },\n            set: function (cache) {\n                this._cacheLocation = cache;\n                if (this._cacheLocations[cache]) {\n                    this._cacheStorage = new Msal.Storage(this._cacheLocations[cache]);\n                }\n                else {\n                    throw new Error(\'Cache Location is not valid. Provided value:\' + this._cacheLocation + \'.Possible values are: \' + this._cacheLocations.localStorage + \', \' + this._cacheLocations.sessionStorage);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(UserAgentApplication.prototype, "authority", {\n            get: function () {\n                return this.authorityInstance.CanonicalAuthority;\n            },\n            set: function (val) {\n                this.authorityInstance = Msal.Authority.CreateInstance(val, this.validateAuthority);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        UserAgentApplication.prototype.loginRedirect = function (scopes, extraQueryParameters) {\n            var _this = this;\n            if (this._loginInProgress) {\n                if (this._tokenReceivedCallback) {\n                    this._tokenReceivedCallback("Login is in progress", null, null, Msal.Constants.idToken);\n                    return;\n                }\n            }\n            if (scopes) {\n                var isValidScope = this.validateInputScope(scopes);\n                if (isValidScope && !Msal.Utils.isEmpty(isValidScope)) {\n                    if (this._tokenReceivedCallback) {\n                        this._tokenReceivedCallback(isValidScope, null, null, Msal.Constants.idToken);\n                        return;\n                    }\n                }\n                scopes = this.filterScopes(scopes);\n            }\n            this.authorityInstance.ResolveEndpointsAsync()\n                .then(function () {\n                var authenticationRequest = new Msal.AuthenticationRequestParameters(_this.authorityInstance, _this.clientId, scopes, ResponseTypes.id_token, _this.redirectUri);\n                if (extraQueryParameters) {\n                    authenticationRequest.extraQueryParameters = extraQueryParameters;\n                }\n                _this._cacheStorage.setItem(Msal.Constants.loginRequest, window.location.href);\n                _this._cacheStorage.setItem(Msal.Constants.loginError, "");\n                _this._cacheStorage.setItem(Msal.Constants.stateLogin, authenticationRequest.state);\n                _this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n                _this._cacheStorage.setItem(Msal.Constants.error, "");\n                _this._cacheStorage.setItem(Msal.Constants.errorDescription, "");\n                var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\n                    _this._cacheStorage.setItem(authorityKey, _this.authority);\n                }\n                var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=select_account" + "&response_mode=fragment";\n                _this._loginInProgress = true;\n                _this.promptUser(urlNavigate);\n            });\n        };\n        UserAgentApplication.prototype.loginPopup = function (scopes, extraQueryParameters) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this._interactionMode = _this._interactionModes.popUp;\n                if (_this._loginInProgress) {\n                    reject(Msal.ErrorCodes.loginProgressError + \':\' + Msal.ErrorDescription.loginProgressError);\n                    return;\n                }\n                if (scopes) {\n                    var isValidScope = _this.validateInputScope(scopes);\n                    if (isValidScope && !Msal.Utils.isEmpty(isValidScope)) {\n                        reject(Msal.ErrorCodes.inputScopesError + \':\' + Msal.ErrorDescription.inputScopesError);\n                        return;\n                    }\n                    scopes = _this.filterScopes(scopes);\n                }\n                var popUpWindow = _this.openWindow(\'about:blank\', \'_blank\', 1, _this, resolve, reject);\n                if (!popUpWindow) {\n                    return;\n                }\n                _this.authorityInstance.ResolveEndpointsAsync().then(function () {\n                    var authenticationRequest = new Msal.AuthenticationRequestParameters(_this.authorityInstance, _this.clientId, scopes, ResponseTypes.id_token, _this.redirectUri);\n                    if (extraQueryParameters) {\n                        authenticationRequest.extraQueryParameters = extraQueryParameters;\n                    }\n                    _this._cacheStorage.setItem(Msal.Constants.loginRequest, window.location.href);\n                    _this._cacheStorage.setItem(Msal.Constants.loginError, "");\n                    _this._cacheStorage.setItem(Msal.Constants.stateLogin, authenticationRequest.state);\n                    _this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n                    _this._cacheStorage.setItem(Msal.Constants.error, "");\n                    _this._cacheStorage.setItem(Msal.Constants.errorDescription, "");\n                    var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                    if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\n                        _this._cacheStorage.setItem(authorityKey, _this.authority);\n                    }\n                    var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=select_account" + "&response_mode=fragment";\n                    _this._loginInProgress = true;\n                    if (popUpWindow) {\n                        popUpWindow.location.href = urlNavigate;\n                    }\n                }, function () {\n                    _this._requestContext.logger.info(Msal.ErrorCodes.endpointResolutionError + \':\' + Msal.ErrorDescription.endpointResolutionError);\n                    _this._cacheStorage.setItem(Msal.Constants.error, Msal.ErrorCodes.endpointResolutionError);\n                    _this._cacheStorage.setItem(Msal.Constants.errorDescription, Msal.ErrorDescription.endpointResolutionError);\n                    if (reject) {\n                        reject(Msal.ErrorCodes.endpointResolutionError + \':\' + Msal.ErrorDescription.endpointResolutionError);\n                    }\n                    if (popUpWindow) {\n                        popUpWindow.close();\n                    }\n                });\n            });\n        };\n        UserAgentApplication.prototype.promptUser = function (urlNavigate) {\n            if (urlNavigate && !Msal.Utils.isEmpty(urlNavigate)) {\n                this._requestContext.logger.info(\'Navigate to:\' + urlNavigate);\n                window.location.replace(urlNavigate);\n            }\n            else {\n                this._requestContext.logger.info(\'Navigate url is empty\');\n            }\n        };\n        ;\n        UserAgentApplication.prototype.openWindow = function (urlNavigate, title, interval, instance, resolve, reject) {\n            var _this = this;\n            var popupWindow = this.openPopup(urlNavigate, title, Msal.Constants.popUpWidth, Msal.Constants.popUpHeight);\n            if (popupWindow == null) {\n                instance._loginInProgress = false;\n                instance._acquireTokenInProgress = false;\n                this._requestContext.logger.info(Msal.ErrorCodes.popUpWindowError + \':\' + Msal.ErrorDescription.popUpWindowError);\n                this._cacheStorage.setItem(Msal.Constants.error, Msal.ErrorCodes.popUpWindowError);\n                this._cacheStorage.setItem(Msal.Constants.errorDescription, Msal.ErrorDescription.popUpWindowError);\n                if (reject) {\n                    reject(Msal.ErrorCodes.popUpWindowError + \':\' + Msal.ErrorDescription.popUpWindowError);\n                }\n                return null;\n            }\n            var pollTimer = window.setInterval(function () {\n                if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\n                    instance._loginInProgress = false;\n                    instance._acquireTokenInProgress = false;\n                    window.clearInterval(pollTimer);\n                }\n                try {\n                    if (popupWindow.location.href.indexOf(_this.redirectUri) !== -1) {\n                        _this.handleAuthenticationResponse(popupWindow.location.hash, resolve, reject);\n                        window.clearInterval(pollTimer);\n                        instance._loginInProgress = false;\n                        instance._acquireTokenInProgress = false;\n                        _this._requestContext.logger.info("Closing popup window");\n                        popupWindow.close();\n                    }\n                }\n                catch (e) {\n                }\n            }, interval);\n            return popupWindow;\n        };\n        UserAgentApplication.prototype.logout = function () {\n            this.clearCache();\n            this._user = null;\n            var logout = "";\n            if (this.postLogoutredirectUri) {\n                logout = \'post_logout_redirect_uri=\' + encodeURIComponent(this.postLogoutredirectUri);\n            }\n            var urlNavigate = this.authority + "/oauth2/v2.0/logout?" + logout;\n            this.promptUser(urlNavigate);\n        };\n        UserAgentApplication.prototype.clearCache = function () {\n            this._renewStates = [];\n            var accessTokenItems = this._cacheStorage.getAllAccessTokens(Msal.Constants.clientId, Msal.Constants.authority);\n            for (var i = 0; i < accessTokenItems.length; i++) {\n                this._cacheStorage.removeItem(JSON.stringify(accessTokenItems[i].key));\n            }\n            this._cacheStorage.removeAcquireTokenEntries(Msal.Constants.acquireTokenUser, Msal.Constants.renewStatus);\n            this._cacheStorage.removeAcquireTokenEntries(Msal.Constants.authority + Msal.Constants.resourceDelimeter, Msal.Constants.renewStatus);\n            this._cacheStorage.resetCacheItems();\n        };\n        UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\n            try {\n                var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n                var winTop = window.screenTop ? window.screenTop : window.screenY;\n                var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n                var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n                var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\n                var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\n                var popupWindow = window.open(urlNavigate, title, \'width=\' + popUpWidth + \', height=\' + popUpHeight + \', top=\' + top_1 + \', left=\' + left);\n                if (popupWindow.focus) {\n                    popupWindow.focus();\n                }\n                return popupWindow;\n            }\n            catch (e) {\n                this._requestContext.logger.error(\'error opening popup \' + e.message);\n                this._loginInProgress = false;\n                this._acquireTokenInProgress = false;\n                return null;\n            }\n        };\n        UserAgentApplication.prototype.validateInputScope = function (scopes) {\n            if (!scopes || scopes.length < 1) {\n                return "Scopes cannot be passed as an empty array";\n            }\n            if (!Array.isArray(scopes)) {\n                throw new Error("API does not accept non-array scopes");\n            }\n            if (scopes.indexOf(this.clientId) > -1) {\n                if (scopes.length > 1) {\n                    return "ClientId can only be provided as a single scope";\n                }\n            }\n            return "";\n        };\n        UserAgentApplication.prototype.filterScopes = function (scopes) {\n            scopes = scopes.filter(function (element) {\n                return element !== "openid";\n            });\n            scopes = scopes.filter(function (element) {\n                return element !== "profile";\n            });\n            return scopes;\n        };\n        UserAgentApplication.prototype.registerCallback = function (expectedState, scope, resolve, reject) {\n            var _this = this;\n            this._activeRenewals[scope] = expectedState;\n            if (!window.callBacksMappedToRenewStates[expectedState]) {\n                window.callBacksMappedToRenewStates[expectedState] = [];\n            }\n            window.callBacksMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\n            if (!window.callBackMappedToRenewStates[expectedState]) {\n                window.callBackMappedToRenewStates[expectedState] =\n                    function (errorDesc, token, error, tokenType) {\n                        _this._activeRenewals[scope] = null;\n                        for (var i = 0; i < window.callBacksMappedToRenewStates[expectedState].length; ++i) {\n                            try {\n                                if (errorDesc || error) {\n                                    window.callBacksMappedToRenewStates[expectedState][i].reject(errorDesc + ": " + error);\n                                    ;\n                                }\n                                else if (token) {\n                                    window.callBacksMappedToRenewStates[expectedState][i].resolve(token);\n                                }\n                            }\n                            catch (e) {\n                                _this._requestContext.logger.warning(e);\n                            }\n                        }\n                        window.callBacksMappedToRenewStates[expectedState] = null;\n                        window.callBackMappedToRenewStates[expectedState] = null;\n                    };\n            }\n        };\n        UserAgentApplication.prototype.getCachedToken = function (authenticationRequest, user) {\n            var accessTokenCacheItem = null;\n            var scopes = authenticationRequest.scopes;\n            var tokenCacheItems = this._cacheStorage.getAllAccessTokens(this.clientId, user.userIdentifier);\n            if (tokenCacheItems.length === 0) {\n                return null;\n            }\n            var filteredItems = [];\n            if (!authenticationRequest.authority) {\n                for (var i = 0; i < tokenCacheItems.length; i++) {\n                    var cacheItem = tokenCacheItems[i];\n                    var cachedScopes = cacheItem.key.scopes.split(" ");\n                    if (Msal.Utils.containsScope(cachedScopes, scopes)) {\n                        filteredItems.push(cacheItem);\n                    }\n                }\n                if (filteredItems.length === 1) {\n                    accessTokenCacheItem = filteredItems[0];\n                    authenticationRequest.authorityInstance = Msal.Authority.CreateInstance(accessTokenCacheItem.key.authority, this.validateAuthority);\n                }\n                else if (filteredItems.length > 1) {\n                    return {\n                        errorDesc: "The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements like authority",\n                        token: null,\n                        error: "multiple_matching_tokens_detected"\n                    };\n                }\n                else {\n                    var authorityList = this.getUniqueAuthority(tokenCacheItems, \'authority\');\n                    if (authorityList.length > 1) {\n                        return {\n                            errorDesc: "Multiple authorities found in the cache. Pass authority in the API overload.",\n                            token: null,\n                            error: "multiple_matching_tokens_detected"\n                        };\n                    }\n                    authenticationRequest.authorityInstance = Msal.Authority.CreateInstance(authorityList[0], this.validateAuthority);\n                }\n            }\n            else {\n                for (var i = 0; i < tokenCacheItems.length; i++) {\n                    var cacheItem = tokenCacheItems[i];\n                    var cachedScopes = cacheItem.key.scopes.split(" ");\n                    if (Msal.Utils.containsScope(cachedScopes, scopes) && cacheItem.key.authority === authenticationRequest.authority) {\n                        filteredItems.push(cacheItem);\n                    }\n                }\n                if (filteredItems.length === 0) {\n                    return null;\n                }\n                else if (filteredItems.length === 1) {\n                    accessTokenCacheItem = filteredItems[0];\n                }\n                else {\n                    return {\n                        errorDesc: "The cache contains multiple tokens satisfying the requirements.Call AcquireToken again providing more requirements like authority",\n                        token: null,\n                        error: "multiple_matching_tokens_detected"\n                    };\n                }\n            }\n            if (accessTokenCacheItem != null) {\n                var expired = Number(accessTokenCacheItem.value.expiresIn);\n                var offset = this._clockSkew || 300;\n                if (expired && (expired > Msal.Utils.now() + offset)) {\n                    return {\n                        errorDesc: null,\n                        token: accessTokenCacheItem.value.accessToken,\n                        error: null\n                    };\n                }\n                else {\n                    this._cacheStorage.removeItem(JSON.stringify(filteredItems[0].key));\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        };\n        UserAgentApplication.prototype.getAllUsers = function () {\n            var users = [];\n            var accessTokenCacheItems = this._cacheStorage.getAllAccessTokens(Msal.Constants.clientId, Msal.Constants.authority);\n            for (var i = 0; i < accessTokenCacheItems.length; i++) {\n                var idToken = new Msal.IdToken(accessTokenCacheItems[i].value.idToken);\n                var clientInfo = new Msal.ClientInfo(accessTokenCacheItems[i].value.clientInfo);\n                var user = Msal.User.createUser(idToken, clientInfo, this.authority);\n                users.push(user);\n            }\n            return this.getUniqueUsers(users);\n        };\n        UserAgentApplication.prototype.getUniqueUsers = function (users) {\n            if (!users || users.length <= 1) {\n                return users;\n            }\n            var flags = [];\n            var uniqueUsers = [];\n            for (var index = 0; index < users.length; ++index) {\n                if (users[index].userIdentifier && flags.indexOf(users[index].userIdentifier) === -1) {\n                    flags.push(users[index].userIdentifier);\n                    uniqueUsers.push(users[index]);\n                }\n            }\n            return uniqueUsers;\n        };\n        UserAgentApplication.prototype.getUniqueAuthority = function (accessTokenCacheItems, property) {\n            var authorityList = [];\n            var flags = [];\n            accessTokenCacheItems.forEach(function (element) {\n                if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\n                    flags.push(element.key[property]);\n                    authorityList.push(element.key[property]);\n                }\n            });\n            return authorityList;\n        };\n        UserAgentApplication.prototype.addHintParameters = function (urlNavigate, user) {\n            var userObject = user ? user : this._user;\n            var decodedClientInfo = userObject.userIdentifier.split(\'.\');\n            var uid = Msal.Utils.base64DecodeStringUrlSafe(decodedClientInfo[0]);\n            var utid = Msal.Utils.base64DecodeStringUrlSafe(decodedClientInfo[1]);\n            if (userObject.displayableId && !Msal.Utils.isEmpty(userObject.displayableId)) {\n                urlNavigate += \'&login_hint=\' + encodeURIComponent(user.displayableId);\n            }\n            if (!Msal.Utils.isEmpty(uid) && !Msal.Utils.isEmpty(utid)) {\n                if (!this.urlContainsQueryStringParameter("domain_req", urlNavigate) && !Msal.Utils.isEmpty(utid)) {\n                    urlNavigate += \'&domain_req=\' + encodeURIComponent(utid);\n                }\n                if (!this.urlContainsQueryStringParameter("login_req", urlNavigate) && !Msal.Utils.isEmpty(uid)) {\n                    urlNavigate += \'&login_req=\' + encodeURIComponent(uid);\n                }\n                if (!this.urlContainsQueryStringParameter("domain_hint", urlNavigate) && !Msal.Utils.isEmpty(utid)) {\n                    if (utid === "9188040d-6c67-4c5b-b112-36a304b66dad") {\n                        urlNavigate += \'&domain_hint=\' + encodeURIComponent("consumers");\n                    }\n                    else {\n                        urlNavigate += \'&domain_hint=\' + encodeURIComponent("organizations");\n                    }\n                }\n            }\n            return urlNavigate;\n        };\n        UserAgentApplication.prototype.urlContainsQueryStringParameter = function (name, url) {\n            var regex = new RegExp("[\\\\?&]" + name + "=");\n            return regex.test(url);\n        };\n        UserAgentApplication.prototype.acquireTokenRedirect = function (scopes, authority, user, extraQueryParameters) {\n            var _this = this;\n            var isValidScope = this.validateInputScope(scopes);\n            if (isValidScope && !Msal.Utils.isEmpty(isValidScope)) {\n                if (this._tokenReceivedCallback) {\n                    this._tokenReceivedCallback(isValidScope, null, null, Msal.Constants.accessToken);\n                    return;\n                }\n            }\n            if (scopes) {\n                scopes = this.filterScopes(scopes);\n            }\n            var userObject = user ? user : this._user;\n            if (this._acquireTokenInProgress) {\n                return;\n            }\n            var scope = scopes.join(" ").toLowerCase();\n            if (!userObject) {\n                if (this._tokenReceivedCallback) {\n                    this._tokenReceivedCallback(Msal.ErrorDescription.userLoginError, null, Msal.ErrorCodes.userLoginError, Msal.Constants.accessToken);\n                    return;\n                }\n            }\n            this._acquireTokenInProgress = true;\n            var authenticationRequest;\n            var acquireTokenAuthority = authority ? Msal.Authority.CreateInstance(authority, this.validateAuthority) : this.authorityInstance;\n            acquireTokenAuthority.ResolveEndpointsAsync().then(function () {\n                if (Msal.Utils.compareObjects(userObject, _this._user)) {\n                    authenticationRequest = new Msal.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.token, _this.redirectUri);\n                }\n                else {\n                    authenticationRequest = new Msal.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this.redirectUri);\n                }\n                _this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n                var acquireTokenUserKey = Msal.Constants.acquireTokenUser + Msal.Constants.resourceDelimeter + userObject.userIdentifier + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(acquireTokenUserKey))) {\n                    _this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\n                }\n                var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\n                    _this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\n                }\n                if (extraQueryParameters) {\n                    authenticationRequest.extraQueryParameters = extraQueryParameters;\n                }\n                var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=select_account" + "&response_mode=fragment";\n                urlNavigate = _this.addHintParameters(urlNavigate, userObject);\n                if (urlNavigate) {\n                    _this._cacheStorage.setItem(Msal.Constants.stateAcquireToken, authenticationRequest.state);\n                    window.location.replace(urlNavigate);\n                }\n            });\n        };\n        UserAgentApplication.prototype.acquireTokenPopup = function (scopes, authority, user, extraQueryParameters) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this._interactionMode = _this._interactionModes.popUp;\n                var isValidScope = _this.validateInputScope(scopes);\n                if (isValidScope && !Msal.Utils.isEmpty(isValidScope)) {\n                    reject(Msal.ErrorCodes.inputScopesError + \':\' + isValidScope);\n                }\n                if (scopes) {\n                    scopes = _this.filterScopes(scopes);\n                }\n                var userObject = user ? user : _this._user;\n                if (_this._acquireTokenInProgress) {\n                    reject(Msal.ErrorCodes.acquireTokenProgressError + \':\' + Msal.ErrorDescription.acquireTokenProgressError);\n                    return;\n                }\n                var scope = scopes.join(" ").toLowerCase();\n                if (!userObject) {\n                    reject(Msal.ErrorCodes.userLoginError + \':\' + Msal.ErrorDescription.userLoginError);\n                    return;\n                }\n                _this._acquireTokenInProgress = true;\n                var authenticationRequest;\n                var acquireTokenAuthority = authority ? Msal.Authority.CreateInstance(authority, _this.validateAuthority) : _this.authorityInstance;\n                var popUpWindow = _this.openWindow(\'about:blank\', \'_blank\', 1, _this, resolve, reject);\n                if (!popUpWindow) {\n                    return;\n                }\n                acquireTokenAuthority.ResolveEndpointsAsync().then(function () {\n                    if (Msal.Utils.compareObjects(userObject, _this._user)) {\n                        authenticationRequest = new Msal.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.token, _this.redirectUri);\n                    }\n                    else {\n                        authenticationRequest = new Msal.AuthenticationRequestParameters(acquireTokenAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this.redirectUri);\n                    }\n                    _this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n                    authenticationRequest.state = authenticationRequest.state;\n                    var acquireTokenUserKey = Msal.Constants.acquireTokenUser + Msal.Constants.resourceDelimeter + userObject.userIdentifier + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                    if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(acquireTokenUserKey))) {\n                        _this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(userObject));\n                    }\n                    var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n                    if (Msal.Utils.isEmpty(_this._cacheStorage.getItem(authorityKey))) {\n                        _this._cacheStorage.setItem(authorityKey, acquireTokenAuthority.CanonicalAuthority);\n                    }\n                    if (extraQueryParameters) {\n                        authenticationRequest.extraQueryParameters = extraQueryParameters;\n                    }\n                    var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=select_account" + "&response_mode=fragment";\n                    urlNavigate = _this.addHintParameters(urlNavigate, userObject);\n                    _this._renewStates.push(authenticationRequest.state);\n                    _this.registerCallback(authenticationRequest.state, scope, resolve, reject);\n                    if (popUpWindow) {\n                        popUpWindow.location.href = urlNavigate;\n                    }\n                }, function () {\n                    _this._requestContext.logger.info(Msal.ErrorCodes.endpointResolutionError + \':\' + Msal.ErrorDescription.endpointResolutionError);\n                    _this._cacheStorage.setItem(Msal.Constants.error, Msal.ErrorCodes.endpointResolutionError);\n                    _this._cacheStorage.setItem(Msal.Constants.errorDescription, Msal.ErrorDescription.endpointResolutionError);\n                    if (reject) {\n                        reject(Msal.ErrorCodes.endpointResolutionError + \':\' + Msal.ErrorDescription.endpointResolutionError);\n                    }\n                    if (popUpWindow)\n                        popUpWindow.close();\n                });\n            });\n        };\n        UserAgentApplication.prototype.acquireTokenSilent = function (scopes, authority, user, extraQueryParameters) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                var isValidScope = _this.validateInputScope(scopes);\n                if (isValidScope && !Msal.Utils.isEmpty(isValidScope)) {\n                    reject(Msal.ErrorCodes.inputScopesError + \':\' + isValidScope);\n                }\n                else {\n                    if (scopes) {\n                        scopes = _this.filterScopes(scopes);\n                    }\n                    var scope = scopes.join(" ").toLowerCase();\n                    var userObject_1 = user ? user : _this._user;\n                    if (!userObject_1) {\n                        reject(Msal.ErrorCodes.userLoginError + \':\' + Msal.ErrorDescription.userLoginError);\n                        return;\n                    }\n                    var authenticationRequest_1;\n                    var newAuthority = authority ? Msal.Authority.CreateInstance(authority, _this.validateAuthority) : _this.authorityInstance;\n                    if (Msal.Utils.compareObjects(userObject_1, _this._user)) {\n                        authenticationRequest_1 = new Msal.AuthenticationRequestParameters(newAuthority, _this.clientId, scopes, ResponseTypes.token, _this.redirectUri);\n                    }\n                    else {\n                        authenticationRequest_1 = new Msal.AuthenticationRequestParameters(newAuthority, _this.clientId, scopes, ResponseTypes.id_token_token, _this.redirectUri);\n                    }\n                    var cacheResult = _this.getCachedToken(authenticationRequest_1, userObject_1);\n                    if (cacheResult) {\n                        if (cacheResult.token) {\n                            _this._requestContext.logger.info(\'Token is already in cache for scope:\' + scope);\n                            resolve(cacheResult.token);\n                            return;\n                        }\n                        else if (cacheResult.errorDesc || cacheResult.error) {\n                            _this._requestContext.logger.info(cacheResult.errorDesc + ":" + cacheResult.error);\n                            reject(cacheResult.errorDesc + ": " + cacheResult.error);\n                            return;\n                        }\n                    }\n                    if (_this._activeRenewals[scope]) {\n                        _this.registerCallback(_this._activeRenewals[scope], scope, resolve, reject);\n                    }\n                    return _this.authorityInstance.ResolveEndpointsAsync()\n                        .then(function () {\n                        if (scopes && scopes.indexOf(_this.clientId) > -1 && scopes.length === 1) {\n                            _this._requestContext.logger.verbose("renewing idToken");\n                            _this.renewIdToken(scopes, resolve, reject, userObject_1, authenticationRequest_1, extraQueryParameters);\n                        }\n                        else {\n                            _this._requestContext.logger.verbose("renewing accesstoken");\n                            _this.renewToken(scopes, resolve, reject, userObject_1, authenticationRequest_1, extraQueryParameters);\n                        }\n                    });\n                }\n            });\n        };\n        UserAgentApplication.prototype.loadFrameTimeout = function (urlNavigate, frameName, scope) {\n            var _this = this;\n            this._requestContext.logger.verbose(\'Set loading state to pending for: \' + scope);\n            this._cacheStorage.setItem(Msal.Constants.renewStatus + scope, Msal.Constants.tokenRenewStatusInProgress);\n            this.loadFrame(urlNavigate, frameName);\n            setTimeout(function () {\n                if (_this._cacheStorage.getItem(Msal.Constants.renewStatus + scope) === Msal.Constants.tokenRenewStatusInProgress) {\n                    _this._requestContext.logger.verbose(\'Loading frame has timed out after: \' + (Msal.Constants.loadFrameTimeout / 1000) + \' seconds for scope \' + scope);\n                    var expectedState = _this._activeRenewals[scope];\n                    if (expectedState && window.callBackMappedToRenewStates[expectedState])\n                        window.callBackMappedToRenewStates[expectedState]("Token renewal operation failed due to timeout", null, null, Msal.Constants.accessToken);\n                    _this._cacheStorage.setItem(Msal.Constants.renewStatus + scope, Msal.Constants.tokenRenewStatusCancelled);\n                }\n            }, Msal.Constants.loadFrameTimeout);\n        };\n        UserAgentApplication.prototype.loadFrame = function (urlNavigate, frameName) {\n            var _this = this;\n            this._requestContext.logger.info(\'LoadFrame: \' + frameName);\n            var frameCheck = frameName;\n            setTimeout(function () {\n                var frameHandle = _this.addAdalFrame(frameCheck);\n                if (frameHandle.src === "" || frameHandle.src === "about:blank") {\n                    frameHandle.src = urlNavigate;\n                }\n            }, 500);\n        };\n        UserAgentApplication.prototype.addAdalFrame = function (iframeId) {\n            if (typeof iframeId === "undefined") {\n                return null;\n            }\n            this._requestContext.logger.info(\'Add msal frame to document:\' + iframeId);\n            var adalFrame = document.getElementById(iframeId);\n            if (!adalFrame) {\n                if (document.createElement &&\n                    document.documentElement &&\n                    (window.navigator.userAgent.indexOf("MSIE 5.0") === -1)) {\n                    var ifr = document.createElement("iframe");\n                    ifr.setAttribute("id", iframeId);\n                    ifr.style.visibility = "hidden";\n                    ifr.style.position = "absolute";\n                    ifr.style.width = ifr.style.height = "0";\n                    adalFrame = document.getElementsByTagName("body")[0].appendChild(ifr);\n                }\n                else if (document.body && document.body.insertAdjacentHTML) {\n                    document.body.insertAdjacentHTML(\'beforeEnd\', \'<iframe name="\' + iframeId + \'" id="\' + iframeId + \'" style="display:none"></iframe>\');\n                }\n                if (window.frames && window.frames[iframeId]) {\n                    adalFrame = window.frames[iframeId];\n                }\n            }\n            return adalFrame;\n        };\n        UserAgentApplication.prototype.renewToken = function (scopes, resolve, reject, user, authenticationRequest, extraQueryParameters) {\n            var scope = scopes.join(" ").toLowerCase();\n            this._requestContext.logger.verbose(\'renewToken is called for scope:\' + scope);\n            var frameHandle = this.addAdalFrame(\'msalRenewFrame\' + scope);\n            if (extraQueryParameters) {\n                authenticationRequest.extraQueryParameters = extraQueryParameters;\n            }\n            var acquireTokenUserKey = Msal.Constants.acquireTokenUser + Msal.Constants.resourceDelimeter + user.userIdentifier + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n            if (Msal.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\n                this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\n            }\n            var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n            if (Msal.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\n                this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\n            }\n            this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n            this._requestContext.logger.verbose(\'Renew token Expected state: \' + authenticationRequest.state);\n            var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=none";\n            urlNavigate = this.addHintParameters(urlNavigate, user);\n            this._renewStates.push(authenticationRequest.state);\n            this.registerCallback(authenticationRequest.state, scope, resolve, reject);\n            this._requestContext.logger.infoPii(\'Navigate to:\' + urlNavigate);\n            frameHandle.src = "about:blank";\n            this.loadFrameTimeout(urlNavigate, \'msalRenewFrame\' + scope, scope);\n        };\n        UserAgentApplication.prototype.renewIdToken = function (scopes, resolve, reject, user, authenticationRequest, extraQueryParameters) {\n            var scope = scopes.join(" ").toLowerCase();\n            this._requestContext.logger.info(\'renewidToken is called\');\n            var frameHandle = this.addAdalFrame("msalIdTokenFrame");\n            if (extraQueryParameters) {\n                authenticationRequest.extraQueryParameters = extraQueryParameters;\n            }\n            var acquireTokenUserKey = Msal.Constants.acquireTokenUser + Msal.Constants.resourceDelimeter + user.userIdentifier + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n            if (Msal.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\n                this._cacheStorage.setItem(acquireTokenUserKey, JSON.stringify(user));\n            }\n            var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + authenticationRequest.state;\n            if (Msal.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\n                this._cacheStorage.setItem(authorityKey, authenticationRequest.authority);\n            }\n            this._cacheStorage.setItem(Msal.Constants.nonceIdToken, authenticationRequest.nonce);\n            this._requestContext.logger.verbose(\'Renew Idtoken Expected state: \' + authenticationRequest.state);\n            var urlNavigate = authenticationRequest.createNavigateUrl(scopes) + "&prompt=none";\n            urlNavigate = this.addHintParameters(urlNavigate, user);\n            this._renewStates.push(authenticationRequest.state);\n            this.registerCallback(authenticationRequest.state, this.clientId, resolve, reject);\n            this._requestContext.logger.infoPii(\'Navigate to:\' + urlNavigate);\n            frameHandle.src = "about:blank";\n            this.loadFrameTimeout(urlNavigate, "adalIdTokenFrame", this.clientId);\n        };\n        UserAgentApplication.prototype.getUser = function () {\n            if (this._user) {\n                return this._user;\n            }\n            var rawIdToken = this._cacheStorage.getItem(Msal.Constants.idTokenKey);\n            var rawClientInfo = this._cacheStorage.getItem(Msal.Constants.clientInfo);\n            if (!Msal.Utils.isEmpty(rawIdToken) && !Msal.Utils.isEmpty(rawClientInfo)) {\n                var idToken = new Msal.IdToken(rawIdToken);\n                var clientInfo = new Msal.ClientInfo(rawClientInfo);\n                this._user = Msal.User.createUser(idToken, clientInfo, this.authority);\n                return this._user;\n            }\n            return null;\n        };\n        ;\n        UserAgentApplication.prototype.handleAuthenticationResponse = function (hash, resolve, reject) {\n            if (hash == null) {\n                hash = window.location.hash;\n            }\n            if (this.isCallback(hash)) {\n                var requestInfo = this.getRequestInfo(hash);\n                this._requestContext.logger.info("Returned from redirect url");\n                this.saveTokenFromHash(requestInfo);\n                var token = null, tokenReceivedCallback = null, tokenType = void 0;\n                if ((requestInfo.requestType === Msal.Constants.renewToken) && window.parent) {\n                    if (window.parent !== window)\n                        this._requestContext.logger.verbose("Window is in iframe, acquiring token silently");\n                    else\n                        this._requestContext.logger.verbose("acquiring token interactive in progress");\n                    if (window.parent.callBackMappedToRenewStates[requestInfo.stateResponse])\n                        tokenReceivedCallback = window.parent.callBackMappedToRenewStates[requestInfo.stateResponse];\n                    else\n                        tokenReceivedCallback = this._tokenReceivedCallback;\n                    token = requestInfo.parameters[Msal.Constants.accessToken] || requestInfo.parameters[Msal.Constants.idToken];\n                    tokenType = Msal.Constants.accessToken;\n                }\n                else if (requestInfo.requestType === Msal.Constants.login) {\n                    tokenReceivedCallback = this._tokenReceivedCallback;\n                    token = requestInfo.parameters[Msal.Constants.idToken];\n                    tokenType = Msal.Constants.idToken;\n                }\n                try {\n                    var errorDesc = requestInfo.parameters[Msal.Constants.errorDescription];\n                    var error = requestInfo.parameters[Msal.Constants.error];\n                    if (reject && resolve) {\n                        if (error || errorDesc) {\n                            reject(errorDesc + ":" + error);\n                        }\n                        else if (token) {\n                            resolve(token);\n                        }\n                    }\n                    else if (tokenReceivedCallback) {\n                        tokenReceivedCallback(errorDesc, token, error, tokenType);\n                    }\n                }\n                catch (err) {\n                    this._requestContext.logger.error(\'Error occurred in token received callback function: \' + err);\n                }\n                if (this._interactionMode !== this._interactionModes.popUp) {\n                    window.location.hash = "";\n                    if (this.navigateToLoginRequestUrl && window.location.href.replace("#", "") !== this._cacheStorage.getItem(Msal.Constants.loginRequest))\n                        window.location.href = this._cacheStorage.getItem(Msal.Constants.loginRequest);\n                }\n            }\n        };\n        UserAgentApplication.prototype.saveAccessToken = function (authority, tokenResponse, user, clientInfo, idToken) {\n            var scope;\n            var clientObj = new Msal.ClientInfo(clientInfo);\n            if (tokenResponse.parameters.hasOwnProperty("scope")) {\n                scope = tokenResponse.parameters["scope"];\n                var consentedScopes = scope.split(" ");\n                var accessTokenCacheItems = this._cacheStorage.getAllAccessTokens(this.clientId, authority);\n                for (var i = 0; i < accessTokenCacheItems.length; i++) {\n                    var accessTokenCacheItem = accessTokenCacheItems[i];\n                    if (accessTokenCacheItem.key.userIdentifier === user.userIdentifier) {\n                        var cachedScopes = accessTokenCacheItem.key.scopes.split(" ");\n                        if (Msal.Utils.isIntersectingScopes(cachedScopes, consentedScopes))\n                            this._cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\n                    }\n                }\n                var accessTokenKey = new Msal.AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\n                var accessTokenValue = new Msal.AccessTokenValue(tokenResponse.parameters[Msal.Constants.accessToken], idToken.rawIdToken, Msal.Utils.expiresIn(tokenResponse.parameters[Msal.Constants.expiresIn]).toString(), clientInfo);\n                this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\n            }\n            else {\n                scope = this.clientId;\n                var accessTokenKey = new Msal.AccessTokenKey(authority, this.clientId, scope, clientObj.uid, clientObj.utid);\n                var accessTokenValue = new Msal.AccessTokenValue(tokenResponse.parameters[Msal.Constants.idToken], tokenResponse.parameters[Msal.Constants.idToken], idToken.expiration, clientInfo);\n                this._cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\n            }\n        };\n        UserAgentApplication.prototype.saveTokenFromHash = function (tokenResponse) {\n            this._requestContext.logger.info(\'State status:\' + tokenResponse.stateMatch + \'; Request type:\' + tokenResponse.requestType);\n            this._cacheStorage.setItem(Msal.Constants.error, "");\n            this._cacheStorage.setItem(Msal.Constants.errorDescription, "");\n            var scope = \'\';\n            if (tokenResponse.parameters.hasOwnProperty("scope")) {\n                scope = tokenResponse.parameters["scope"];\n            }\n            else {\n                scope = this.clientId;\n            }\n            if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.errorDescription) || tokenResponse.parameters.hasOwnProperty(Msal.Constants.error)) {\n                this._requestContext.logger.info(\'Error :\' + tokenResponse.parameters[Msal.Constants.error] + \'; Error description:\' + tokenResponse.parameters[Msal.Constants.errorDescription]);\n                this._cacheStorage.setItem(Msal.Constants.error, tokenResponse.parameters["error"]);\n                this._cacheStorage.setItem(Msal.Constants.errorDescription, tokenResponse.parameters[Msal.Constants.errorDescription]);\n                if (tokenResponse.requestType === Msal.Constants.login) {\n                    this._loginInProgress = false;\n                    this._cacheStorage.setItem(Msal.Constants.loginError, tokenResponse.parameters[Msal.Constants.errorDescription] + \':\' + tokenResponse.parameters[Msal.Constants.error]);\n                }\n                if (tokenResponse.requestType === Msal.Constants.renewToken) {\n                    this._acquireTokenInProgress = false;\n                }\n            }\n            else {\n                if (tokenResponse.stateMatch) {\n                    this._requestContext.logger.info("State is right");\n                    if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.sessionState))\n                        this._cacheStorage.setItem(Msal.Constants.sessionState, tokenResponse.parameters[Msal.Constants.sessionState]);\n                    var idToken;\n                    var clientInfo = \'\';\n                    if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.accessToken)) {\n                        this._requestContext.logger.info("Fragment has access token");\n                        this._acquireTokenInProgress = false;\n                        var user = void 0;\n                        if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.idToken)) {\n                            idToken = new Msal.IdToken(tokenResponse.parameters[Msal.Constants.idToken]);\n                        }\n                        else {\n                            idToken = new Msal.IdToken(this._cacheStorage.getItem(Msal.Constants.idTokenKey));\n                        }\n                        var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + tokenResponse.stateResponse;\n                        var authority = void 0;\n                        if (!Msal.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\n                            authority = this._cacheStorage.getItem(authorityKey);\n                            authority = Msal.Utils.replaceFirstPath(authority, idToken.tenantId);\n                        }\n                        if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.clientInfo)) {\n                            clientInfo = tokenResponse.parameters[Msal.Constants.clientInfo];\n                            user = Msal.User.createUser(idToken, new Msal.ClientInfo(clientInfo), authority);\n                        }\n                        else {\n                            this._requestContext.logger.warning("ClientInfo not received in the response from AAD");\n                            user = Msal.User.createUser(idToken, new Msal.ClientInfo(clientInfo), authority);\n                        }\n                        var acquireTokenUserKey = Msal.Constants.acquireTokenUser + Msal.Constants.resourceDelimeter + user.userIdentifier + Msal.Constants.resourceDelimeter + tokenResponse.stateResponse;\n                        var acquireTokenUser = void 0;\n                        if (!Msal.Utils.isEmpty(this._cacheStorage.getItem(acquireTokenUserKey))) {\n                            acquireTokenUser = JSON.parse(this._cacheStorage.getItem(acquireTokenUserKey));\n                            if (user && acquireTokenUser && Msal.Utils.compareObjects(user, acquireTokenUser)) {\n                                this.saveAccessToken(authority, tokenResponse, user, clientInfo, idToken);\n                                this._requestContext.logger.info("The user object received in the response is the same as the one passed in the acquireToken request");\n                            }\n                            else {\n                                this._requestContext.logger.warning("The user object created from the response is not the same as the one passed in the acquireToken request");\n                            }\n                        }\n                    }\n                    if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.idToken)) {\n                        if (scope.indexOf(this.clientId) > -1) {\n                            this._requestContext.logger.info("Fragment has id token");\n                            this._loginInProgress = false;\n                            idToken = new Msal.IdToken(tokenResponse.parameters[Msal.Constants.idToken]);\n                            if (tokenResponse.parameters.hasOwnProperty(Msal.Constants.clientInfo)) {\n                                clientInfo = tokenResponse.parameters[Msal.Constants.clientInfo];\n                            }\n                            else {\n                                this._requestContext.logger.warning("ClientInfo not received in the response from AAD");\n                            }\n                            var authorityKey = Msal.Constants.authority + Msal.Constants.resourceDelimeter + tokenResponse.stateResponse;\n                            var authority = void 0;\n                            if (!Msal.Utils.isEmpty(this._cacheStorage.getItem(authorityKey))) {\n                                authority = this._cacheStorage.getItem(authorityKey);\n                                authority = Msal.Utils.replaceFirstPath(authority, idToken.tenantId);\n                            }\n                            this._user = Msal.User.createUser(idToken, new Msal.ClientInfo(clientInfo), authority);\n                            if (idToken && idToken.nonce) {\n                                if (idToken.nonce !== this._cacheStorage.getItem(Msal.Constants.nonceIdToken)) {\n                                    this._user = null;\n                                    this._cacheStorage.setItem(Msal.Constants.loginError, \'Nonce Mismatch.Expected: \' + this._cacheStorage.getItem(Msal.Constants.nonceIdToken) + \',\' + \'Actual: \' + idToken.nonce);\n                                }\n                                else {\n                                    this._cacheStorage.setItem(Msal.Constants.idTokenKey, tokenResponse.parameters[Msal.Constants.idToken]);\n                                    this._cacheStorage.setItem(Msal.Constants.clientInfo, clientInfo);\n                                    this.saveAccessToken(authority, tokenResponse, this._user, clientInfo, idToken);\n                                }\n                            }\n                            else {\n                                this._cacheStorage.setItem(Msal.Constants.error, \'invalid idToken\');\n                                this._cacheStorage.setItem(Msal.Constants.errorDescription, \'Invalid idToken. idToken: \' + tokenResponse.parameters[Msal.Constants.idToken]);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this._cacheStorage.setItem(Msal.Constants.error, \'Invalid_state\');\n                    this._cacheStorage.setItem(Msal.Constants.errorDescription, \'Invalid_state. state: \' + tokenResponse.stateResponse);\n                }\n            }\n            this._cacheStorage.setItem(Msal.Constants.renewStatus + scope, Msal.Constants.tokenRenewStatusCompleted);\n            this._cacheStorage.removeAcquireTokenEntries(Msal.Constants.acquireTokenUser, Msal.Constants.renewStatus);\n            this._cacheStorage.removeAcquireTokenEntries(Msal.Constants.authority + Msal.Constants.resourceDelimeter, Msal.Constants.renewStatus);\n        };\n        ;\n        UserAgentApplication.prototype.isCallback = function (hash) {\n            hash = this.getHash(hash);\n            var parameters = Msal.Utils.deserialize(hash);\n            return (parameters.hasOwnProperty(Msal.Constants.errorDescription) ||\n                parameters.hasOwnProperty(Msal.Constants.error) ||\n                parameters.hasOwnProperty(Msal.Constants.accessToken) ||\n                parameters.hasOwnProperty(Msal.Constants.idToken));\n        };\n        UserAgentApplication.prototype.getHash = function (hash) {\n            if (hash.indexOf("#/") > -1) {\n                hash = hash.substring(hash.indexOf("#/") + 2);\n            }\n            else if (hash.indexOf("#") > -1) {\n                hash = hash.substring(1);\n            }\n            return hash;\n        };\n        ;\n        UserAgentApplication.prototype.getRequestInfo = function (hash) {\n            hash = this.getHash(hash);\n            var parameters = Msal.Utils.deserialize(hash);\n            var tokenResponse = new Msal.TokenResponse();\n            if (parameters) {\n                tokenResponse.parameters = parameters;\n                if (parameters.hasOwnProperty(Msal.Constants.errorDescription) ||\n                    parameters.hasOwnProperty(Msal.Constants.error) ||\n                    parameters.hasOwnProperty(Msal.Constants.accessToken) ||\n                    parameters.hasOwnProperty(Msal.Constants.idToken)) {\n                    tokenResponse.valid = true;\n                    var stateResponse = void 0;\n                    if (parameters.hasOwnProperty("state"))\n                        stateResponse = parameters.state;\n                    else\n                        return tokenResponse;\n                    tokenResponse.stateResponse = stateResponse;\n                    if (stateResponse === this._cacheStorage.getItem(Msal.Constants.stateLogin)) {\n                        tokenResponse.requestType = Msal.Constants.login;\n                        tokenResponse.stateMatch = true;\n                        return tokenResponse;\n                    }\n                    else if (stateResponse === this._cacheStorage.getItem(Msal.Constants.stateAcquireToken)) {\n                        tokenResponse.requestType = Msal.Constants.renewToken;\n                        tokenResponse.stateMatch = true;\n                        return tokenResponse;\n                    }\n                    if (!tokenResponse.stateMatch && window.parent && window.parent.msal) {\n                        var clientApplication = window.parent.msal;\n                        var statesInParentContext = clientApplication._renewStates;\n                        for (var i = 0; i < statesInParentContext.length; i++) {\n                            if (statesInParentContext[i] === tokenResponse.stateResponse) {\n                                tokenResponse.requestType = Msal.Constants.renewToken;\n                                tokenResponse.stateMatch = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            return tokenResponse;\n        };\n        ;\n        UserAgentApplication.prototype.getScopeFromState = function (state) {\n            if (state) {\n                var splitIndex = state.indexOf("|");\n                if (splitIndex > -1 && splitIndex + 1 < state.length) {\n                    return state.substring(splitIndex + 1);\n                }\n            }\n            return "";\n        };\n        ;\n        return UserAgentApplication;\n    }());\n    Msal.UserAgentApplication = UserAgentApplication;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var Utils = (function () {\n        function Utils() {\n        }\n        Utils.compareObjects = function (u1, u2) {\n            if (!u1 || !u2)\n                return false;\n            if (u1.userIdentifier && u2.userIdentifier) {\n                if (u1.userIdentifier === u2.userIdentifier) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        ;\n        Utils.expiresIn = function (expires) {\n            if (!expires)\n                expires = "3599";\n            return this.now() + parseInt(expires, 10);\n        };\n        ;\n        Utils.now = function () {\n            return Math.round(new Date().getTime() / 1000.0);\n        };\n        ;\n        Utils.isEmpty = function (str) {\n            return (typeof str === "undefined" || !str || 0 === str.length);\n        };\n        ;\n        Utils.extractIdToken = function (encodedIdToken) {\n            var decodedToken = this.decodeJwt(encodedIdToken);\n            if (!decodedToken) {\n                return null;\n            }\n            try {\n                var base64IdToken = decodedToken.JWSPayload;\n                var base64Decoded = this.base64DecodeStringUrlSafe(base64IdToken);\n                if (!base64Decoded) {\n                    return null;\n                }\n                return JSON.parse(base64Decoded);\n            }\n            catch (err) {\n            }\n            return null;\n        };\n        ;\n        Utils.base64EncodeStringUrlSafe = function (input) {\n            if (window.btoa) {\n                return window.btoa(input);\n            }\n            else {\n                return this.encode(input);\n            }\n        };\n        Utils.base64DecodeStringUrlSafe = function (base64IdToken) {\n            base64IdToken = base64IdToken.replace(/-/g, "+").replace(/_/g, "/");\n            if (window.atob) {\n                return decodeURIComponent(window.atob(base64IdToken));\n            }\n            else {\n                return decodeURIComponent(this.decode(base64IdToken));\n            }\n        };\n        ;\n        Utils.encode = function (input) {\n            var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\n            var output = "";\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = this.utf8Encode(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                }\n                else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\n            }\n            return output.replace(/\\+/g, "-").replace(/\\//g, "_").replace(/=+$/, "");\n        };\n        Utils.utf8Encode = function (input) {\n            input = input.replace(/\\r\\n/g, "\\n");\n            var utftext = "";\n            for (var n = 0; n < input.length; n++) {\n                var c = input.charCodeAt(n);\n                if (c < 128) {\n                    utftext += String.fromCharCode(c);\n                }\n                else if ((c > 127) && (c < 2048)) {\n                    utftext += String.fromCharCode((c >> 6) | 192);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                }\n                else {\n                    utftext += String.fromCharCode((c >> 12) | 224);\n                    utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                    utftext += String.fromCharCode((c & 63) | 128);\n                }\n            }\n            return utftext;\n        };\n        Utils.decode = function (base64IdToken) {\n            var codes = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\n            base64IdToken = String(base64IdToken).replace(/=+$/, "");\n            var length = base64IdToken.length;\n            if (length % 4 === 1) {\n                throw new Error("The token to be decoded is not correctly encoded.");\n            }\n            var h1, h2, h3, h4, bits, c1, c2, c3, decoded = "";\n            for (var i = 0; i < length; i += 4) {\n                h1 = codes.indexOf(base64IdToken.charAt(i));\n                h2 = codes.indexOf(base64IdToken.charAt(i + 1));\n                h3 = codes.indexOf(base64IdToken.charAt(i + 2));\n                h4 = codes.indexOf(base64IdToken.charAt(i + 3));\n                if (i + 2 === length - 1) {\n                    bits = h1 << 18 | h2 << 12 | h3 << 6;\n                    c1 = bits >> 16 & 255;\n                    c2 = bits >> 8 & 255;\n                    decoded += String.fromCharCode(c1, c2);\n                    break;\n                }\n                else if (i + 1 === length - 1) {\n                    bits = h1 << 18 | h2 << 12;\n                    c1 = bits >> 16 & 255;\n                    decoded += String.fromCharCode(c1);\n                    break;\n                }\n                bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n                c1 = bits >> 16 & 255;\n                c2 = bits >> 8 & 255;\n                c3 = bits & 255;\n                decoded += String.fromCharCode(c1, c2, c3);\n            }\n            return decoded;\n        };\n        ;\n        Utils.decodeJwt = function (jwtToken) {\n            if (this.isEmpty(jwtToken)) {\n                return null;\n            }\n            ;\n            var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n            var matches = idTokenPartsRegex.exec(jwtToken);\n            if (!matches || matches.length < 4) {\n                return null;\n            }\n            var crackedToken = {\n                header: matches[1],\n                JWSPayload: matches[2],\n                JWSSig: matches[3]\n            };\n            return crackedToken;\n        };\n        ;\n        Utils.deserialize = function (query) {\n            var match;\n            var pl = /\\+/g;\n            var search = /([^&=]+)=([^&]*)/g;\n            var decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); };\n            var obj = {};\n            match = search.exec(query);\n            while (match) {\n                obj[decode(match[1])] = decode(match[2]);\n                match = search.exec(query);\n            }\n            return obj;\n        };\n        ;\n        Utils.isIntersectingScopes = function (cachedScopes, scopes) {\n            cachedScopes = this.convertToLowerCase(cachedScopes);\n            for (var i = 0; i < scopes.length; i++) {\n                if (cachedScopes.indexOf(scopes[i].toLowerCase()) > -1)\n                    return true;\n            }\n            return false;\n        };\n        Utils.containsScope = function (cachedScopes, scopes) {\n            cachedScopes = this.convertToLowerCase(cachedScopes);\n            return scopes.every(function (value) { return cachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\n        };\n        Utils.convertToLowerCase = function (scopes) {\n            return scopes.map(function (scope) { return scope.toLowerCase(); });\n        };\n        Utils.removeElement = function (scopes, scope) {\n            return scopes.filter(function (value) { return value !== scope; });\n        };\n        Utils.decimalToHex = function (num) {\n            var hex = num.toString(16);\n            while (hex.length < 2) {\n                hex = "0" + hex;\n            }\n            return hex;\n        };\n        Utils.getLibraryVersion = function () {\n            return "0.1.1";\n        };\n        Utils.replaceFirstPath = function (href, tenantId) {\n            var match = href.match(/^(https?\\:)\\/\\/(([^:\\/?#]*)(?:\\:([0-9]+))?)([\\/]{0,1}[^?#]*)(\\?[^#]*|)(#.*|)$/);\n            if (match) {\n                var urlObject = Utils.GetUrlComponents(href);\n                var pathArray = urlObject.PathSegments;\n                pathArray.shift();\n                if (pathArray[0] && pathArray[0] === \'common\' || pathArray[0] === \'organizations\') {\n                    pathArray[0] = tenantId;\n                    href = urlObject.Protocol + "//" + urlObject.HostNameAndPort + "/" + pathArray.join(\'/\');\n                }\n            }\n            return href;\n        };\n        Utils.createNewGuid = function () {\n            var cryptoObj = window.crypto;\n            if (cryptoObj && cryptoObj.getRandomValues) {\n                var buffer = new Uint8Array(16);\n                cryptoObj.getRandomValues(buffer);\n                buffer[6] |= 0x40;\n                buffer[6] &= 0x4f;\n                buffer[8] |= 0x80;\n                buffer[8] &= 0xbf;\n                return Utils.decimalToHex(buffer[0]) + Utils.decimalToHex(buffer[1])\n                    + Utils.decimalToHex(buffer[2]) + Utils.decimalToHex(buffer[3])\n                    + "-" + Utils.decimalToHex(buffer[4]) + Utils.decimalToHex(buffer[5])\n                    + "-" + Utils.decimalToHex(buffer[6]) + Utils.decimalToHex(buffer[7])\n                    + "-" + Utils.decimalToHex(buffer[8]) + Utils.decimalToHex(buffer[9])\n                    + "-" + Utils.decimalToHex(buffer[10]) + Utils.decimalToHex(buffer[11])\n                    + Utils.decimalToHex(buffer[12]) + Utils.decimalToHex(buffer[13])\n                    + Utils.decimalToHex(buffer[14]) + Utils.decimalToHex(buffer[15]);\n            }\n            else {\n                var guidHolder = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";\n                var hex = "0123456789abcdef";\n                var r = 0;\n                var guidResponse = "";\n                for (var i = 0; i < 36; i++) {\n                    if (guidHolder[i] !== "-" && guidHolder[i] !== "4") {\n                        r = Math.random() * 16 | 0;\n                    }\n                    if (guidHolder[i] === "x") {\n                        guidResponse += hex[r];\n                    }\n                    else if (guidHolder[i] === "y") {\n                        r &= 0x3;\n                        r |= 0x8;\n                        guidResponse += hex[r];\n                    }\n                    else {\n                        guidResponse += guidHolder[i];\n                    }\n                }\n                return guidResponse;\n            }\n        };\n        ;\n        Utils.GetUrlComponents = function (url) {\n            if (!url) {\n                throw "Url required";\n            }\n            var regEx = new RegExp(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/);\n            var match = url.match(regEx);\n            if (!match || match.length < 6) {\n                throw "Valid url required";\n            }\n            var urlComponents = {\n                Protocol: match[1],\n                HostNameAndPort: match[4],\n                AbsolutePath: match[5]\n            };\n            var pathSegments = urlComponents.AbsolutePath.split("/");\n            pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; });\n            urlComponents.PathSegments = pathSegments;\n            return urlComponents;\n        };\n        Utils.CanonicalizeUri = function (url) {\n            if (url) {\n                url = url.toLowerCase();\n            }\n            if (url && !Utils.endsWith(url, "/")) {\n                url += "/";\n            }\n            return url;\n        };\n        Utils.endsWith = function (url, suffix) {\n            if (!url || !suffix) {\n                return false;\n            }\n            return url.indexOf(suffix, url.length - suffix.length) !== -1;\n        };\n        return Utils;\n    }());\n    Msal.Utils = Utils;\n})(Msal || (Msal = {}));\nvar Msal;\n(function (Msal) {\n    var XhrClient = (function () {\n        function XhrClient() {\n        }\n        XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(method, url, true);\n                if (enableCaching) {\n                }\n                xhr.onload = function (ev) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        reject(_this.handleError(xhr.responseText));\n                    }\n                    try {\n                        var jsonResponse = JSON.parse(xhr.responseText);\n                    }\n                    catch (e) {\n                        reject(_this.handleError(xhr.responseText));\n                    }\n                    resolve(jsonResponse);\n                };\n                xhr.onerror = function (ev) {\n                    reject(xhr.status);\n                };\n                if (method == \'GET\') {\n                    xhr.send();\n                }\n                else {\n                    throw "not implemented";\n                }\n            });\n        };\n        XhrClient.prototype.handleError = function (responseText) {\n            var jsonResponse;\n            try {\n                jsonResponse = JSON.parse(responseText);\n                if (jsonResponse.error) {\n                    return jsonResponse.error;\n                }\n                else\n                    throw responseText;\n            }\n            catch (e) {\n                return responseText;\n            }\n        };\n        return XhrClient;\n    }());\n    Msal.XhrClient = XhrClient;\n})(Msal || (Msal = {}));\n//# sourceMappingURL=msal.js.map\n\n//# sourceURL=webpack:///./src/node_modules/msal/out/msal.js?')}});